<!doctype html>
<html lang="zh-Hant">
<head>
<meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1">
<title>Accessory “Decisive” +1→+12 強化模擬器（遊戲版，單檔）</title>
<style>
*{box-sizing:border-box}html,body{margin:0;padding:0;font-family:system-ui,-apple-system,"Segoe UI",Roboto,Ubuntu,"Noto Sans TC",sans-serif;color:#111;background:#f6f7f9}
.container{max-width:1100px;margin:0 auto;padding:16px}
h1{margin:0 0 4px 0;font-size:24px} .sub{margin:0;color:#555}
.grid{display:grid;gap:16px;grid-template-columns:1fr 1fr} @media(max-width:980px){.grid{grid-template-columns:1fr}}
.card{background:#fff;border:1px solid #e5e7eb;border-radius:12px;padding:16px;box-shadow:0 1px 2px rgba(0,0,0,.04)}
h2{margin:0 0 8px 0;font-size:18px}
.btn{padding:8px 12px;border:1px solid #d1d5db;border-radius:12px;cursor:pointer}
.btn.primary{background:#111;color:#fff;border-color:#111}
.btn[disabled]{opacity:.5;cursor:not-allowed}
input[type="number"]{width:90px;padding:6px 8px;border:1px solid #d1d5db;border-radius:10px}
.kv{background:#fff;border:1px solid #e5e7eb;border-radius:12px;padding:12px}
.kv .label{color:#6b7280;font-size:12px} .kv .value{font-weight:700;margin-top:2px}
.grid4{display:grid;grid-template-columns:repeat(4,1fr);gap:12px} @media(max-width:640px){.grid4{grid-template-columns:repeat(2,1fr)}}
.table{width:100%;border-collapse:collapse} .table th,.table td{border-bottom:1px solid #eee;padding:8px;text-align:left;font-size:14px}
.badge-ok{color:#059669} .badge-ng{color:#e11d48}
.progress{display:grid;grid-template-columns:repeat(12,1fr);gap:4px;margin-top:6px}
.progress div{height:8px;border-radius:999px;background:#cbd5e1}
.progress .passed{background:#10b981} .progress .active{background:#3b82f6}
.cost-grid{display:grid;grid-template-columns:repeat(4,1fr);gap:8px} @media(max-width:720px){.cost-grid{grid-template-columns:repeat(2,1fr)}}
.cost-item{display:flex;align-items:center;gap:8px;border:1px solid #e5e7eb;border-radius:12px;padding:8px;background:#fff}
.small{color:#6b7280;font-size:12px}
</style>
</head>
<body>
<header class="container">
  <h1>飾品《決戰》強化模擬器（遊戲式單檔版）</h1>
  <p class="sub">規則：失敗不降級；一次嘗試成本 = S[L] × (p/100)；成功機率 = p%。</p>
</header>

<main class="container grid">

  <!-- 左側：操作 -->
  <section class="card">
    <h2>① 操作區</h2>

    <div class="grid4" id="summary">
      <div class="kv"><div class="label">目前等級</div><div class="value" id="vLevel">+1</div></div>
      <div class="kv"><div class="label">本次成功率</div><div class="value"><span id="vP">30</span>%</div></div>
      <div class="kv"><div class="label">本次成本</div><div class="value"><span id="vCost">0.00</span> 顆</div></div>
      <div class="kv"><div class="label">累積總耗</div><div class="value"><span id="vTotal">0.00</span> 顆</div></div>
    </div>

    <div style="margin-top:12px">
      <div style="display:flex;justify-content:space-between;align-items:center">
        <label class="small">調整本次成功率（%）</label>
        <span class="small">建議：前期 30%、後期 70–90%</span>
      </div>
      <div style="display:flex;align-items:center;gap:8px;margin-top:6px">
        <input id="pRange" type="range" min="1" max="100" step="1" value="30" style="flex:1">
        <input id="pInput" type="number" min="1" max="100" step="1" value="30">
        <span class="small">%</span>
      </div>
    </div>

    <div style="margin-top:10px;display:flex;gap:8px;flex-wrap:wrap">
      <button id="btnTry" class="btn primary">嘗試</button>
      <button id="btnReset" class="btn">重置本輪</button>
      <button id="btnCSV" class="btn">下載 CSV</button>
    </div>

    <div class="small" style="margin-top:8px">本級已嘗試：<span id="vAttempts">0</span> 次</div>

    <div style="margin-top:10px">
      <div class="small" style="display:flex;justify-content:space-between">
        <span>強化進度</span>
        <span>期望總耗 ΣS[L]：<span id="vExpected">0.00</span></span>
      </div>
      <div class="progress" id="progress"></div>
    </div>

    <div id="winBox" style="display:none;margin-top:12px" class="kv">
      <div style="color:#059669;font-weight:700">恭喜！已達成 +12</div>
      <div class="small">本輪總共消耗：<b id="vTotalFinal">0</b> 顆鋒芒石</div>
    </div>

    <div style="margin-top:14px">
      <h3 style="margin:0 0 6px 0;font-size:16px">③ 歷程紀錄（最新在最上方）</h3>
      <div class="small" style="margin-bottom:6px">顯示最近 100 筆；完整可下載 CSV。</div>
      <div style="overflow:auto;border:1px solid #e5e7eb;border-radius:12px">
        <table class="table" id="logTable">
          <thead>
            <tr style="background:#f3f4f6"><th>#</th><th>等級</th><th>成功率(%)</th><th>本次成本</th><th>結果</th><th>累積總耗</th></tr>
          </thead>
          <tbody></tbody>
        </table>
      </div>
    </div>
  </section>

  <!-- 右側：成本編輯 -->
  <section class="card">
    <h2>② 成本表（100% 成功所需鋒芒石）</h2>
    <div class="small">可編輯、支援小數；按「重設成本」回預設。</div>

    <div class="cost-grid" id="costGrid"></div>

    <div style="display:flex;align-items:center;gap:8px;margin-top:8px">
      <button id="btnResetCost" class="btn">重設成本</button>
      <span class="small">合計 ΣS[L]：<b id="vSum">0.00</b></span>
    </div>
  </section>

</main>

<script>
/* ===== Data ===== */
const DEFAULT_S = [38,57,66.5,152,180.5,209,323,361,399,551,589,627];

/* ===== State ===== */
let S = DEFAULT_S.slice();
let level = 1;          // 1..12
let p = 30;             // 1..100
let total = 0;
let attemptsCurr = 0;
let log = [];           // {id,level,p,cost,success,totalAfter}
let nextId = 1;

/* ===== DOM ===== */
const vLevel = document.getElementById("vLevel");
const vP = document.getElementById("vP");
const vCost = document.getElementById("vCost");
const vTotal = document.getElementById("vTotal");
const vTotalFinal = document.getElementById("vTotalFinal");
const vExpected = document.getElementById("vExpected");
const vAttempts = document.getElementById("vAttempts");
const progress = document.getElementById("progress");
const logBody = document.querySelector("#logTable tbody");
const winBox = document.getElementById("winBox");
const pRange = document.getElementById("pRange");
const pInput = document.getElementById("pInput");
const costGrid = document.getElementById("costGrid");
const vSum = document.getElementById("vSum");

function fmt(n, d=2){ return Number(n).toLocaleString(undefined,{minimumFractionDigits:d,maximumFractionDigits:d}); }
function secureRandom(){ if (crypto?.getRandomValues){const u=new Uint32Array(1); crypto.getRandomValues(u); return u[0]/2**32;} return Math.random(); }

/* ===== UI Builders ===== */
function buildProgress(){
  progress.innerHTML = "";
  for(let i=1;i<=12;i++){
    const div = document.createElement("div");
    if (i < level) div.className = "passed";
    else if (i === level) div.className = "active";
    progress.appendChild(div);
  }
}
function buildCosts(){
  costGrid.innerHTML = "";
  S.forEach((val, i)=>{
    const wrap = document.createElement("div");
    wrap.className = "cost-item";
    wrap.innerHTML = `<div class="small" style="width:36px">+${i+1}</div>`;
    const inp = document.createElement("input");
    inp.type="number"; inp.min="0"; inp.step="0.1"; inp.value=val;
    inp.oninput = () => { S[i]=Number(inp.value)||0; refresh();
      // keep visible expected + sum updated while editing
    };
    wrap.appendChild(inp);
    costGrid.appendChild(wrap);
  });
}
function refresh(){
  vLevel.textContent = level>12 ? "+12 完成" : `+${level}`;
  vP.textContent = p;
  const perTry = (S[level-1]||0) * (p/100);
  vCost.textContent = fmt(perTry);
  vTotal.textContent = fmt(total);
  vTotalFinal.textContent = fmt(total);
  vAttempts.textContent = attemptsCurr;
  vExpected.textContent = fmt(S.reduce((a,b)=>a+Number(b||0),0));
  vSum.textContent = fmt(S.reduce((a,b)=>a+Number(b||0),0));
  buildProgress();
  winBox.style.display = level>12 ? "block" : "none";

  // render log (latest first)
  logBody.innerHTML = "";
  log.slice(-100).reverse().forEach(r=>{
    const tr = document.createElement("tr");
    tr.innerHTML = `<td>${r.id}</td>
      <td>+${r.level}</td>
      <td>${r.p}%</td>
      <td>${fmt(r.cost)}</td>
      <td>${r.success?'<span class="badge-ok">成功</span>':'<span class="badge-ng">失敗</span>'}</td>
      <td>${fmt(r.totalAfter)}</td>`;
    logBody.appendChild(tr);
  });
}

/* ===== Handlers ===== */
function clampP(x){ x = Math.round(x); if(x<1) x=1; if(x>100) x=100; return x; }
pRange.addEventListener("input", e=>{ p = clampP(e.target.value); pInput.value = p; refresh(); });
pInput.addEventListener("input", e=>{ p = clampP(e.target.value); pRange.value = p; refresh(); });

document.getElementById("btnTry").addEventListener("click", ()=>{
  if (level>12) return;
  const perTry = (S[level-1]||0) * (p/100);
  total += perTry;
  attemptsCurr += 1;
  const success = secureRandom() < (p/100);
  log.push({id:nextId++, level, p, cost:perTry, success, totalAfter:total});
  if (success){ level += 1; attemptsCurr = 0; }
  refresh();
});

document.getElementById("btnReset").addEventListener("click", ()=>{
  level = 1; p = 30; total = 0; attemptsCurr = 0; log = []; nextId = 1;
  pRange.value = p; pInput.value = p; refresh();
});

document.getElementById("btnResetCost").addEventListener("click", ()=>{
  S = DEFAULT_S.slice(); buildCosts(); refresh();
});

document.getElementById("btnCSV").addEventListener("click", ()=>{
  if (log.length===0){ alert("尚無紀錄"); return; }
  const rows = [["#", "等級", "成功率(%)", "本次成本", "結果", "累積總耗"]];
  log.forEach(r=>rows.push([r.id, r.level, r.p, r.cost.toFixed(2), r.success?"成功":"失敗", r.totalAfter.toFixed(2)]));
  const csv = rows.map(r=>r.join(",")).join("\n");
  const blob = new Blob([csv], {type:"text/csv;charset=utf-8"});
  const a = document.createElement("a"); a.href=URL.createObjectURL(blob); a.download="upgrade_log.csv"; a.click();
  URL.revokeObjectURL(a.href);
});

/* ===== Init ===== */
buildCosts();
refresh();
</script>
</body>
</html>
